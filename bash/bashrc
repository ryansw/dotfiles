# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# load aliases
[ -f ~/.bash_aliases ] && . ~/.bash_aliases

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

# Check if __git_ps1 is available
if command -v __git_ps1 &> /dev/null
then
    PS1_GIT="\[\033[36m\]\$(__git_ps1 ' (%s)')"
fi

# Assemble the preferred prompt
PS1="\n\[\033[32m\]\u@\h \[\033[33m\]\w${PS1_Code}${PS1_GIT}\[\033[0m\]\n$(echo -e '\u03bb') "

# Call dotfiles updater
DOTFILES=$(readlink -f $(dirname $(readlink -f $BASH_SOURCE))/..)
. $DOTFILES/scripts/dotfile-update.sh

# Allow system specific bashrc stuff here
[ -f ~/.bash_system ] && . ~/.bash_system
